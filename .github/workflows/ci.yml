name: CI Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        rust-version: [1.75.0]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      
      - name: Setup Rust ${{ matrix.rust-version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          profile: minimal
          override: true
          components: rustfmt, clippy
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.22/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
      
      - name: Install Anchor CLI
        run: |
          cargo install --git https://github.com/coral-xyz/anchor --tag v0.31.1 anchor-cli --locked
          anchor --version
      
      - name: Generate keypair
        run: |
          solana-keygen new --no-bip39-passphrase --force
          solana config set --url localhost
      
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      
      - name: Lint Rust code
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings
      
      - name: Build program
        run: |
          anchor build
          ls -la target/deploy/
      
      - name: Run tests
        run: |
          # Start validator in background
          solana-test-validator --quiet --reset &
          VALIDATOR_PID=$!
          
          # Wait for validator to start
          sleep 10
          
          # Verify validator is running
          solana cluster-version
          
          # Run the test suite
          anchor test --skip-local-validator
          TEST_RESULT=$?
          
          # Clean up
          kill $VALIDATOR_PID || true
          
          exit $TEST_RESULT
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-node${{ matrix.node-version }}
          path: |
            test-results/
            target/deploy/
